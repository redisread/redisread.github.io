<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Java on VictorHong&#39;s Blog</title>
    <link>https://hugo.jiahongw.com/en/tags/java/</link>
    <description>Recent content in Java on VictorHong&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>1427298682@qq.com (VictorHong)</managingEditor>
    <webMaster>1427298682@qq.com (VictorHong)</webMaster>
    <copyright>©2021-2023| VictorHong | <a href="https://beian.miit.gov.cn">粤ICP备20043735号</a></copyright>
    <lastBuildDate>Mon, 28 Mar 2022 17:38:53 +0800</lastBuildDate>
    
        <atom:link href="https://hugo.jiahongw.com/en/tags/java/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>CompletableFuture笔记</title>
        <link>https://hugo.jiahongw.com/en/zh/posts/java/completablefuture/</link>
        <pubDate>Mon, 28 Mar 2022 17:38:53 +0800</pubDate>
        <author>1427298682@qq.com (VictorHong)</author>
        <atom:modified>Sun, 19 Feb 2023 01:04:10 +0800</atom:modified>
        <guid>https://hugo.jiahongw.com/en/zh/posts/java/completablefuture/</guid>
        <description>创建线程池的方法： 1 2 3 4 ExecutorService executorService = Executors.newCachedThreadPool(); ExecutorService executorService = Executors.newFixedThreadPool(3); ScheduledExecutorService executorService = Executors.newScheduledThreadPool(3); ExecutorService executorService = Executors.newSingleThreadExecutor(); https://www.cnblogs.com/pcheng/p/13540619.html 多线程的问题 线程任务是实现了Runnable接口，或者直接写个类继承Thread</description>
        
        <dc:creator>Victor</dc:creator>
        <media:content url="https://hugo.jiahongw.comhttps://raw.githubusercontent.com/redisread/Image/master/Java/java.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Java</category>
            
          
            
              <category>CompletableFuture</category>
            
          
        
        
          
            
          
        
        
          
            
              <category>Java</category>
            
          
        
      </item>
      
      <item>
        <title>java8笔记📒</title>
        <link>https://hugo.jiahongw.com/en/zh/posts/java/java8-note/</link>
        <pubDate>Thu, 09 Sep 2021 11:14:17 +0800</pubDate>
        <author>1427298682@qq.com (VictorHong)</author>
        <atom:modified>Sun, 19 Feb 2023 01:04:10 +0800</atom:modified>
        <guid>https://hugo.jiahongw.com/en/zh/posts/java/java8-note/</guid>
        <description>✌️cxc 《Java实战》笔记 stream的使用注意 一个 Stream pipeline 中包含一个源 Stream，接着是 0个或者多个中间操作( intermediat巳 o</description>
        
        <dc:creator>Victor</dc:creator>
        <media:content url="https://hugo.jiahongw.comhttps://raw.githubusercontent.com/redisread/Image/master/2021-09-09/4519129_java_icon.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Java</category>
            
          
            
              <category>Effective Java</category>
            
          
        
        
          
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>Java装箱拆箱</title>
        <link>https://hugo.jiahongw.com/en/zh/posts/java/boxing-unboxing/</link>
        <pubDate>Thu, 12 Aug 2021 21:21:00 +0800</pubDate>
        <author>1427298682@qq.com (VictorHong)</author>
        <atom:modified>Sun, 19 Feb 2023 01:04:10 +0800</atom:modified>
        <guid>https://hugo.jiahongw.com/en/zh/posts/java/boxing-unboxing/</guid>
        <description>Java语言虽然号称一切都是对象，但原始数据类型是例外。 在Java 5中，引入了自动装箱和自动拆箱功能（boxing/unboxing），Ja</description>
        
        <dc:creator>Victor</dc:creator>
        <media:content url="https://hugo.jiahongw.comhttps://raw.githubusercontent.com/redisread/Image/master/Java/java.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Java</category>
            
          
        
        
          
            
              <category>Java</category>
            
          
        
        
          
            
          
        
      </item>
      

    
  </channel>
</rss>
