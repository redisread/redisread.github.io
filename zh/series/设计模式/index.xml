<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>设计模式 on ✏Victor&#39;s Blog</title>
    <link>https://hugo.jiahongw.com/zh/series/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link>
    <description>Recent content in 设计模式 on ✏Victor&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>1427298682@qq.com (VictorHong)</managingEditor>
    <webMaster>1427298682@qq.com (VictorHong)</webMaster>
    <copyright>&amp;copy;{year}, Redisread</copyright>
    <lastBuildDate>Wed, 05 Jan 2022 11:44:23 +0800</lastBuildDate>
    
        <atom:link href="https://hugo.jiahongw.com/zh/series/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/index.xml" rel="self" type="application/rss+xml" />
    
    
    
      
      <item>
        <title>设计模式-装饰器模式</title>
        <link>https://hugo.jiahongw.com/zh/posts/designpattern/decoratorpattern/</link>
        <pubDate>Wed, 05 Jan 2022 11:44:23 +0800</pubDate>
        <author>1427298682@qq.com (VictorHong)</author>
        <guid>https://hugo.jiahongw.com/zh/posts/designpattern/decoratorpattern/</guid>
        <description>定义 装饰器模式动态的将责任附加到对象上，若要拓展功能，装饰者提供了比继承更有弹性的替代方案。 架构（类图） classDiagram class Component { &amp;lt;&amp;lt;abstract&amp;gt;&amp;gt; + methodA() + methodB() } class ConcreateComponent { + methodA() + methodB() }</description>
      </item>
      
      <item>
        <title>观察者模式</title>
        <link>https://hugo.jiahongw.com/zh/posts/designpattern/observerpattern/</link>
        <pubDate>Mon, 03 Jan 2022 22:41:31 +0800</pubDate>
        <author>1427298682@qq.com (VictorHong)</author>
        <guid>https://hugo.jiahongw.com/zh/posts/designpattern/observerpattern/</guid>
        <description>定义 观察者模式定义了对象之间的一对多依赖，这样一来，当一个对象改变状态时，它的所有依赖者都会收到通知并且自动更新。 一个比喻：报纸订阅（出版者</description>
      </item>
      
      <item>
        <title>工厂方法模式</title>
        <link>https://hugo.jiahongw.com/zh/posts/designpattern/factorymethodpattern/</link>
        <pubDate>Wed, 03 Nov 2021 16:05:37 +0800</pubDate>
        <author>1427298682@qq.com (VictorHong)</author>
        <guid>https://hugo.jiahongw.com/zh/posts/designpattern/factorymethodpattern/</guid>
        <description>当我们使用new创建一个对象的时候，需要指定一个具体类，这就是针对实现进行编程。当我们将创建对象的过程封装成一个方法或者接口的时候，就可以避</description>
      </item>
      
    
  </channel>
</rss>