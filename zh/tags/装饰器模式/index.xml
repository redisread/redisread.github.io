<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>装饰器模式 on ✏Victor&#39;s Blog</title>
    <link>https://hugo.jiahongw.com/zh/tags/%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F/</link>
    <description>Recent content in 装饰器模式 on ✏Victor&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>1427298682@qq.com (VictorHong)</managingEditor>
    <webMaster>1427298682@qq.com (VictorHong)</webMaster>
    <copyright>&amp;copy;{year}, Redisread, [粤ICP备20043735号](beian.miit.gov.cn)</copyright>
    <lastBuildDate>Wed, 05 Jan 2022 11:44:23 +0800</lastBuildDate>
    
        <atom:link href="https://hugo.jiahongw.com/zh/tags/%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F/index.xml" rel="self" type="application/rss+xml" />
    
    
    
      
      <item>
        <title>设计模式-装饰器模式</title>
        <link>https://hugo.jiahongw.com/zh/posts/designpattern/decoratorpattern/</link>
        <pubDate>Wed, 05 Jan 2022 11:44:23 +0800</pubDate>
        <author>1427298682@qq.com (VictorHong)</author>
        <guid>https://hugo.jiahongw.com/zh/posts/designpattern/decoratorpattern/</guid>
        <description>定义 装饰器模式动态的将责任附加到对象上，若要拓展功能，装饰者提供了比继承更有弹性的替代方案。 架构（类图） classDiagram class Component { &amp;lt;&amp;lt;abstract&amp;gt;&amp;gt; + methodA() + methodB() } class ConcreateComponent { + methodA() + methodB() }</description>
      </item>
      
    
  </channel>
</rss>