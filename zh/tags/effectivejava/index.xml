<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>EffectiveJava on ✏Victor&#39;s Blog</title>
    <link>https://hugo.jiahongw.com/zh/tags/effectivejava/</link>
    <description>Recent content in EffectiveJava on ✏Victor&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>1427298682@qq.com (VictorHong)</managingEditor>
    <webMaster>1427298682@qq.com (VictorHong)</webMaster>
    <copyright>&amp;copy;{year}, Redisread</copyright>
    <lastBuildDate>Sat, 16 Oct 2021 18:35:36 +0800</lastBuildDate>
    
        <atom:link href="https://hugo.jiahongw.com/zh/tags/effectivejava/index.xml" rel="self" type="application/rss+xml" />
    
    
    
      
      <item>
        <title>(2)2-当构造函数有多个参数时，考虑改用构建器</title>
        <link>https://hugo.jiahongw.com/zh/posts/bookeffectivejava/2-item2/</link>
        <pubDate>Sat, 16 Oct 2021 18:35:36 +0800</pubDate>
        <author>1427298682@qq.com (VictorHong)</author>
        <guid>https://hugo.jiahongw.com/zh/posts/bookeffectivejava/2-item2/</guid>
        <description>item2 当构造函数有多个参数时，考虑改用构建器。 多参数构造函数的问题 静态工厂和构造函数都有一个局限：它们不能对大量可选参数做很好的扩展。以一个类为</description>
      </item>
      
      <item>
        <title>(2)1-考虑以静态工厂方法代替构造函数</title>
        <link>https://hugo.jiahongw.com/zh/posts/bookeffectivejava/2-item1/</link>
        <pubDate>Sat, 16 Oct 2021 16:42:14 +0800</pubDate>
        <author>1427298682@qq.com (VictorHong)</author>
        <guid>https://hugo.jiahongw.com/zh/posts/bookeffectivejava/2-item1/</guid>
        <description>item1 考虑以静态工厂方法代替构造函数（Consider static factory methods instead of constructors）。 什么是静态工厂方法？ 一个类可以提供公共静态工厂方法，</description>
      </item>
      
    
  </channel>
</rss>